///
/// JDocumentScan.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include "DocumentScan.hpp"

#include <string>

namespace margelo::nitro::documentcamera {

  using namespace facebook;

  /**
   * The C++ JNI bridge between the C++ struct "DocumentScan" and the the Kotlin data class "DocumentScan".
   */
  struct JDocumentScan final: public jni::JavaClass<JDocumentScan> {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/documentcamera/DocumentScan;";

  public:
    /**
     * Convert this Java/Kotlin-based struct to the C++ struct DocumentScan by copying all values to C++.
     */
    [[maybe_unused]]
    [[nodiscard]]
    DocumentScan toCpp() const {
      static const auto clazz = javaClassStatic();
      static const auto fieldImageUri = clazz->getField<jni::JString>("imageUri");
      jni::local_ref<jni::JString> imageUri = this->getFieldValue(fieldImageUri);
      static const auto fieldOcrText = clazz->getField<jni::JString>("ocrText");
      jni::local_ref<jni::JString> ocrText = this->getFieldValue(fieldOcrText);
      return DocumentScan(
        imageUri->toStdString(),
        ocrText->toStdString()
      );
    }

  public:
    /**
     * Create a Java/Kotlin-based struct by copying all values from the given C++ struct to Java.
     */
    [[maybe_unused]]
    static jni::local_ref<JDocumentScan::javaobject> fromCpp(const DocumentScan& value) {
      return newInstance(
        jni::make_jstring(value.imageUri),
        jni::make_jstring(value.ocrText)
      );
    }
  };

} // namespace margelo::nitro::documentcamera
